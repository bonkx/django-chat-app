version: "3.8"

volumes:
  static_volume:
  media_volume:
  pgdata:


services:
  redis:
    image: redis:7-alpine

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  web:
    build: &app-image
      context: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && uvicorn dash.asgi_docker:application --host 0.0.0.0 --port 8000 --reload"
    volumes: &app-vol
      - ./dash:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment: &app-env
      - DJANGO_SETTINGS_MODULE=dash.settings_docker
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    env_file: &envfile
      - ./.env
    depends_on:
      - redis
      - db
    ports:
      - "8000:8000"

  celery_worker:
    build: *app-image
    command: celery -A dash.celery worker -l INFO
    environment: *app-env
    volumes: *app-vol
    env_file: *envfile
    depends_on:
      - web

  celery_beat:
    build: *app-image
    command: sh -c "rm -rf celerybeat.pid && celery -A dash.celery beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    environment: *app-env
    volumes: *app-vol
    env_file: *envfile
    depends_on:
      - web

  flower:
    build: *app-image
    command: sh -c "celery -A dash --broker=redis://redis:6379/0 flower"
    environment: *app-env
    volumes: *app-vol
    env_file: *envfile
    depends_on:
      - web
    ports:
      - 5555:5555
